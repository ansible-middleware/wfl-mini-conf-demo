---
- name: Ensure Wildfly is install and running as a service
  hosts: all
  vars_files:
    - vars/subsystems.yml
    - vars/app.yml
  collections:
    - middleware_automation.wildfly
  roles:
    - wildfly_install
    - wildfly_systemd
  vars:
    postgres_driver_version: 9.4.1212
    wildfly_java_package_name: java-17-openjdk-headless
    wildfly_config_base: 'standalone-full.xml'
    configuration_file: "{{ wildfly_home }}/standalone/configuration/wildfly.xml"
  pre_tasks:
    - name: "Remove previous standalone configuration {{ configuration_file }}"
      ansible.builtin.file:
        path: "{{ configuration_file }}"
        state: absent
  tasks:
    - name: Install driver with wildfly_driver role
      ansible.builtin.include_role:
        name: wildfly_driver
      vars:
        wildfly_driver_module_name: "{{ item.name }}"
        wildfly_driver_version: "{{ item.version }}"
        wildfly_driver_jar_filename: "{{ item.jar_file }}"
        wildfly_driver_jar_url: "{{ item.url }}"
      loop:
        - { version: "{{ postgres_driver_version }}", name: 'org.postgresql', jar_file: "postgresql-{{ postgres_driver_version }}.jar", url: "https://repo.maven.apache.org/maven2/org/postgresql/postgresql/{{ postgres_driver_version }}/postgresql-{{ postgres_driver_version }}.jar" }
  post_tasks:
    - name: "Deploy apps"
      when:
        - app_deploy_enabled 
      block:
          
        - name: "Download {{ app | length }} webapps."
          ansible.builtin.get_url:
            url: "{{ app[0].url }}"
            dest: "{{ wildfly_install_workdir }}/{{ app[0].name }}"
    
        - name: "Deploy {{ app | length }} webapp(s)"
          ansible.builtin.include_role:
            name: wildfly_utils
            tasks_from: jboss_cli.yml
          vars:
            jboss_home: "{{ wildfly_home }}"
            jboss_cli_query: "'deploy --force {{ wildfly_install_workdir }}/{{ app[0].name }}'"
    
        - name: "Validate that server is functionnal"
          ansible.builtin.include_role:
            name: middleware_automation.wildfly.wildfly_validation
